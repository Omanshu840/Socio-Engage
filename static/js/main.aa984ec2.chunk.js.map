{"version":3,"sources":["config.js","components/NavBar.js","components/screens/Home.js","components/screens/SignIn.js","components/screens/Profile.js","components/screens/UserProfile.js","components/screens/Signup.js","components/screens/CreatePost.js","Reducers/userReducer.js","components/screens/SubUserPosts.js","components/screens/Search.js","App.js","serviceWorker.js","index.js"],"names":["SERVER_URL","NavBar","useState","expanded","setExpanded","useContext","UserContext","state","dispatch","history","useHistory","Navbar","className","fixed","expand","Container","Brand","href","Toggle","onClick","aria-controls","Collapse","id","Nav","to","basePath","Button","size","startIcon","endIcon","variant","color","localStorage","clear","type","push","Home","data","setData","useEffect","fetch","headers","getItem","then","res","json","result","posts","console","log","map","item","index","Row","key","Paper","elevation","Card","CardHeader","avatar","Avatar","src","alt","action","postedBy","_id","IconButton","postid","method","Authorization","newData","filter","title","name","subheader","email","Body","photo","Footer","likes","includes","body","JSON","stringify","postId","length","Accordion","AccordionSummary","expandIcon","AccordionDetails","List","comments","record","Divider","ListItem","ListItemText","primary","secondary","text","onSubmit","e","preventDefault","target","value","catch","err","TextField","label","SignIn","password","setPasword","setEmail","showPassword","togglePassword","Header","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","endAdornment","InputAdornment","position","required","aria-label","error","alert","setItem","token","user","payload","Profile","myposts","setMyPosts","image","setImage","myPost","FormData","append","pic","url","Image","rounded","followers","following","placeholder","file","files","UserProfile","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","followId","prevState","unfollowId","newFollower","SignUp","setName","undefined","imgurl","setImgUrl","uploadFields","PostData","uploadPic","CreatePost","setTitle","setBody","imgUrl","postDetails","reducer","SubUserPosts","component","Search","search","setSearch","searchResult","setSearchResult","users","query","fetchUsers","InputProps","link","createContext","Routing","parse","exact","path","Signup","App","useReducer","Provider","Boolean","window","location","hostname","match","theme","createMuiTheme","typography","fontFamily","join","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aa984ec2.chunk.js","sourcesContent":["const SERVER_URL = 'https://musicial-api.onrender.com'\nconst basePath = \"/Socio-Engage\"\n\nexport {\n    SERVER_URL,\n    basePath\n}","import React,{useContext, useState} from 'react'\nimport { Container, Modal, Nav, Navbar } from 'react-bootstrap'\nimport {Link, useHistory} from 'react-router-dom'\nimport {UserContext} from '../App'\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { basePath } from '../config';\n\nconst NavBar = ()=>{\n\n    const [expanded, setExpanded] = useState(false);\n    const {state, dispatch} = useContext(UserContext)\n    const history = useHistory()\n    \n    \n    const renderNav = () => {\n      if(state) {\n        return  (\n          <>\n            <Nav className=\"mr-auto\">\n              <Link to={basePath+\"/\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\"\n                  startIcon={<ExploreIcon/>}\n                >\n                  Explore\n                </Button>\n              </Link>\n\n              <Link to={basePath+\"/followingpost\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\"\n                  startIcon={<InboxIcon/>}\n                >\n                  Feed\n                </Button>\n              </Link>\n\n              <Link to={basePath+\"/createpost\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\"\n                  startIcon={<PostAddIcon/>}\n                >\n                  Post\n                </Button>\n              </Link>\n\n              <Link to={basePath+\"/search\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                    size=\"large\"\n                    startIcon={<SearchIcon/>}\n                >\n                  Search\n                </Button>\n              </Link>\n            </Nav>\n            <Nav>\n              <Link to={basePath+\"/profile\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\"\n                  endIcon={<AccountCircleIcon/>}\n                >\n                  Profile\n                </Button>\n              </Link>\n              <Link className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\" \n                  variant=\"contained\" \n                  color=\"secondary\"\n                  endIcon={<ExitToAppIcon/>}\n                  onClick={() => {\n                    localStorage.clear()\n                    dispatch({type: \"CLEAR\"})\n                    history.push(basePath+'/signin')\n                  }}\n                >\n                  Logout\n                </Button>\n              </Link>\n            </Nav>\n          </>\n        )\n      }\n      else {\n        return (\n          <>\n            <Nav className=\"ml-auto\">\n              <Link to={basePath+\"/signin\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\"\n                >\n                  Sign In\n                </Button>\n              </Link>\n              <Link to={basePath+\"/signup\"} className=\"nav-link\" onClick={() => setExpanded(false)}>\n                <Button\n                  size=\"large\"\n                >\n                  Sign Up\n                </Button>\n              </Link>\n            </Nav>\n          </>\n        )\n      }\n    }\n\n    return(\n      <Navbar expanded={expanded} className=\"main-navbar\" fixed=\"top\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Socio Engage</Navbar.Brand>\n          <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            {renderNav()}\n          </Navbar.Collapse>\n      </Container>\n    </Navbar>\n    )\n}\n\n\nexport default NavBar","import { Accordion, AccordionDetails, AccordionSummary, Avatar, CardHeader, Divider, IconButton, List, ListItem, ListItemText, Paper, TextField } from '@material-ui/core'\nimport React, {useState, useEffect, useContext} from 'react'\nimport { Card, Container, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {UserContext} from '../../App'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { SERVER_URL, basePath } from '../../config'\n\nconst Home  = ()=>{\n\n   const [data, setData] = useState([])\n   const {state, dispatch} = useContext(UserContext)\n   \n   useEffect(() => {\n      fetch(SERVER_URL+'/allposts', {\n         headers: {\n            \"Authorization\" : \"Bearer \" + localStorage.getItem(\"jwt\")\n         }\n      }).then(res => res.json())\n      .then((result) => {\n         setData(result.posts)\n         console.log(result.posts)\n      })\n   }, [])\n\n   const likePost = (id) => {\n      fetch(SERVER_URL+'/like', {\n         method: \"put\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n         },\n         body: JSON.stringify({\n            postId: id\n         })\n      }).then(res => res.json())\n      .then(result => {\n         const newData = data.map(item => {\n            if(item._id === result._id) {\n               return result\n            }\n            else {\n               return item\n            }\n         })\n\n         setData(newData)\n      })\n   }\n\n   const unlikePost = (id) => {\n      fetch(SERVER_URL+'/unlike', {\n         method: \"put\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n         },\n         body: JSON.stringify({\n            postId: id\n         })\n      }).then(res => res.json())\n      .then(result => {\n         const newData = data.map(item => {\n            if(item._id === result._id) {\n               return result\n            }\n            else {\n               return item\n            }\n         })\n\n         setData(newData)\n      })\n   }\n\n   const makeComment = (text,postId)=>{\n      fetch(SERVER_URL+'/comment',{\n          method:\"put\",\n          headers:{\n              \"Content-Type\":\"application/json\",\n              \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              postId,\n              text\n          })\n      }).then(res=>res.json())\n      .then(result=>{\n          const newData = data.map(item=>{\n            if(item._id===result._id){\n                return result\n            }else{\n                return item\n            }\n         })\n        setData(newData)\n      }).catch(err=>{\n          console.log(err)\n      })\n   }\n\n   const deletePost = (postid)=>{\n      fetch(`${SERVER_URL}/deletepost/${postid}`,{\n          method:\"delete\",\n          headers:{\n              Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n          }\n      }).then(res=>res.json())\n      .then(result=>{\n          console.log(result)\n          const newData = data.filter(item=>{\n              return item._id !== result._id\n          })\n          setData(newData)\n      })\n   }\n\n   return(\n        <Container>\n            {state && data.map((item, index) => {\n               return (\n                  <Row className=\"justify-content-md-center\" key={index}>\n                     <div className=\"col-12 col-md-8 card-post\">\n                        <Paper elevation={3} >\n                           <Card>\n                              <CardHeader\n                                 avatar={\n                                    <Avatar>\n                                       <img src=\"https://res.cloudinary.com/omanshu840/image/upload/v1608609510/sample.jpg\" alt=\"...\" />\n                                    </Avatar>\n                                 }\n                                 action={\n                                    item.postedBy._id === state._id \n                                    &&\n                                    <IconButton \n                                       variant=\"primary\"\n                                       onClick={() => {deletePost(item._id)}}\n                                    >\n                                       <DeleteIcon/>\n                                    </IconButton>\n                                 }\n                                 title={\n                                    <Link to={item.postedBy._id !== state._id? basePath+\"/profile/\"+item.postedBy._id : basePath+\"/profile\"  }>\n                                       {item.postedBy.name}\n                                    </Link>\n                                 }\n                                 subheader={item.postedBy.email}\n                              />\n                              <Card.Body>\n                                 <img src={item.photo} alt=\"...\" />\n                              </Card.Body>\n                              <Card.Footer className=\"text-muted\">\n                                 <div>\n                                    {\n                                       item.likes.includes(state._id)\n                                       ? \n                                       <IconButton onClick={() => {unlikePost(item._id)}}>\n                                          <FavoriteIcon/>\n                                       </IconButton>\n                                       :\n                                       <IconButton onClick={() => {likePost(item._id)}}>\n                                          <FavoriteBorderIcon/>\n                                       </IconButton>\n                                    }\n                                 </div>\n                                 <div>\n                                    {item.likes.length} Likes\n                                 </div>\n                                 <div className=\"mt-3\">\n                                    <h4>{item.title}</h4>\n                                 </div>\n                                 <div>\n                                    <p>{item.body}</p>\n                                 </div>\n                                 <Accordion>\n                                    <AccordionSummary\n                                       expandIcon={<ExpandMoreIcon />}\n                                       aria-controls=\"panel1a-content\"\n                                       id=\"panel1a-header\"\n                                    >\n                                       Comments\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                          <List>\n                                             {\n                                                item.comments.map(record => {\n                                                   return (\n                                                      <>\n                                                         <Divider/>\n                                                         <ListItem>\n                                                            <ListItemText \n                                                               primary={record.postedBy.name}\n                                                               secondary={record.text}\n                                                            />\n                                                         </ListItem>\n                                                      </>\n                                                   )\n                                                })\n                                             }\n                                             <Divider/>\n                                             <ListItem>\n                                                <form onSubmit={(e) => {\n                                                   e.preventDefault()\n                                                   makeComment(e.target[0].value, item._id)\n                                                }}>\n                                                   <TextField\n                                                      id=\"input-with-icon-textfield\"\n                                                      label=\"Add a comment\"\n                                                   />\n                                                </form>\n                                             </ListItem>\n                                          </List>\n                                    </AccordionDetails>\n                                 </Accordion>\n                              </Card.Footer>\n                           </Card>\n                        </Paper>\n                     </div>\n                  </Row>\n               )\n            })}\n        </Container>\n   )\n}\n\n\nexport default Home","import React,{useState, useContext} from 'react'\nimport {Link,useHistory} from 'react-router-dom'\nimport {UserContext} from '../../App'\nimport { Card, Container, Row } from 'react-bootstrap'\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {FormControl, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport { SERVER_URL, basePath } from '../../config';\n\nconst SignIn = ()=>{\n    const {state, dispatch} = useContext(UserContext)\n    const history = useHistory()\n    const [password,setPasword] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [showPassword, togglePassword] = useState(false)\n\n    \n    const PostData = ()=>{\n        \n        fetch(SERVER_URL+\"/signin\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                password,\n                email,\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n           if(data.error){\n              alert(data.error)\n           }\n           else{\n               localStorage.setItem(\"jwt\", data.token)\n               localStorage.setItem(\"user\", JSON.stringify(data.user))\n               dispatch({type:\"USER\", payload:data.user})\n               history.push(basePath+'/')\n           }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n   return (\n        <Container>            \n            <Row className=\"justify-content-md-center\">\n                <div className=\"col-12 col-md-6 card-login\">\n                    <Paper elevation={3} >\n                        <Card className=\"text-center\">\n                            <Card.Header><h2>Sign In</h2></Card.Header>\n                            <Card.Body>\n\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"email-field\">Email*</InputLabel>\n                                    <Input\n                                        id=\"email-field\"\n                                        type='email'\n                                        value={email}\n                                        onChange={(e)=>setEmail(e.target.value)}\n                                        endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton>\n                                                <EmailIcon/>\n                                            </IconButton>\n                                        </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Password*</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={showPassword ? 'text' : 'password'}\n                                        value={password}\n                                        onChange={(e)=>setPasword(e.target.value)}\n                                        endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={ () => togglePassword(!showPassword)}\n                                            >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                                <Link to=\"/signup\">Don't have an account? Sign Up</Link>\n                            </Card.Body>\n                            <Card.Footer className=\"text-muted\">\n                                <Button \n                                    size=\"large\"\n                                    variant=\"contained\" \n                                    color=\"primary\"\n                                    onClick={()=>PostData()}\n                                    endIcon={<InputIcon/>}\n                                >\n                                    Sign In\n                                </Button>\n                            </Card.Footer>\n                        </Card>\n                    </Paper>\n                </div>\n            </Row>\n        </Container>\n   )\n}\n\n\nexport default SignIn","import { Card } from '@material-ui/core'\nimport React, {useEffect, useState, useContext} from 'react'\nimport {Container, Image, Row } from 'react-bootstrap'\nimport {UserContext} from '../../App'\nimport { SERVER_URL } from '../../config'\n\nconst Profile  = ()=>{\n    const [myposts, setMyPosts] = useState([])\n    const {state, dispatch} = useContext(UserContext)\n    const [image,setImage] = useState(\"\")\n\n    useEffect(() => {\n        fetch(SERVER_URL+'/myposts', {\n            headers: {\n               \"Authorization\" : \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n         }).then(res => res.json())\n         .then((result) => {\n             console.log(result.myPost)\n            setMyPosts(result.myPost)\n         })\n    }, [])\n\n    useEffect(() => {\n        if(image) {\n            const data = new FormData()\n            data.append(\"file\", image)\n            data.append(\"upload_preset\", \"social-connect\")\n            data.append(\"cloud_name\", \"omanshu840\")\n            fetch(\"https://api.cloudinary.com/v1_1/omanshu840/image/upload\", {\n                method: \"post\",\n                body: data\n            })\n            .then(res => res.json())\n            .then(data => {\n                fetch(SERVER_URL+'/updatepic',{\n                    method:\"put\",\n                    headers:{\n                        \"Content-Type\":\"application/json\",\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n                    },\n                    body:JSON.stringify({\n                        pic:data.url\n                    })\n                }).then(res=>res.json())\n                .then(result=>{\n                    console.log(result)\n                    localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\n                    dispatch({type:\"UPDATEPIC\",payload:result.pic})\n                    //window.location.reload()\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n    }, [image])\n\n    const updatePhoto = (file) => {\n        setImage(file)\n    }\n\n    return(\n        <>\n            <Container>\n                <Card elevation={3}>\n                    <Row>\n                        <div className=\"profile-img col-12 col-md-3\">\n                            <Image src={state? state.pic: \"loading\"} rounded />\n                        </div>\n                        <div className=\"profile-info col-12 col-md-9\">\n                            <div className=\"content pt-3\">\n                                <h3 className=\"pl-4\">{state? state.name: \"loading\"}</h3>\n                                <p className=\"text-muted pl-4\">{state? state.email: \"loading\"}</p>\n                                <p className=\"pl-4\">\n                                    <div>\n                                        {state?state.followers.length:\"0\"} followers  \n                                    </div>\n                                    <div>\n                                        {state?state.following.length:\"0\"} following\n                                    </div>\n                                    <div className=\"mt-3\">\n                                        <strong>Update pic</strong>\n                                        <input\n                                            className=\"px-3\"\n                                            type=\"file\"\n                                            placeholder=\"update pic\"\n                                            onChange={(e) => updatePhoto(e.target.files[0])}\n                                        />\n                                    </div>\n                                </p>\n                            </div>\n                        </div>\n                    </Row>\n                </Card>\n                <Card className=\"mt-4\" elevation={3}>\n                    <Row>\n                        {myposts.map((item, index) => {\n                            return (\n                                <div key={index} className=\"col-12 col-md-3 profile-feed\">\n                                    <img src={item.photo} alt=\"...\"/>\n                                </div>\n                            )\n                        })}\n                    </Row>\n                </Card>\n            </Container>\n        </>\n   )\n}\n\n\nexport default Profile","import { Card } from '@material-ui/core'\nimport React, {useEffect, useState, useContext} from 'react'\nimport { Button, Container, Image, Row } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\nimport {UserContext} from '../../App'\nimport { SERVER_URL } from '../../config'\n\nconst UserProfile  = ()=>{\n    const [userProfile,setProfile] = useState(null)\n    const {state,dispatch} = useContext(UserContext)\n    const {userid} = useParams()\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\n\n    useEffect(()=>{\n        fetch(SERVER_URL+`/user/${userid}`,{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            setProfile(result)\n        })\n    },[])\n\n    const followUser = ()=>{\n        fetch(SERVER_URL+'/follow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                followId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n        \n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            setProfile((prevState)=>{\n                return {\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:[...prevState.user.followers,data._id]\n                    }\n                }\n            })\n            setShowFollow(false)\n        })\n    }\n\n    const unfollowUser = ()=>{\n        fetch(SERVER_URL+'/unfollow',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n            },\n            body:JSON.stringify({\n                unfollowId:userid\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n            \n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\n            localStorage.setItem(\"user\",JSON.stringify(data))\n        \n            setProfile((prevState)=>{\n                const newFollower = prevState.user.followers.filter(item=>item !== data._id )\n                return {\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:newFollower\n                    }\n                }\n            })\n            setShowFollow(true)\n        })\n    }\n\n    return(\n        <>\n        {\n            userProfile \n            ?\n            <Container>\n                <Card elevation={3} className=\"p-2\">\n                    <Row>\n                        <div className=\"profile-img col-12 col-md-3\">\n                            <Image src={userProfile.user.pic} rounded />\n                        </div>\n                        <div className=\"profile-info col-12 col-md-9\">\n                            <div className=\"content pt-3\">\n                                <h3 className=\"pl-4\">{userProfile.user.name}</h3>\n                                <p className=\"text-muted pl-4\">{userProfile.user.email}</p>\n                                <p className=\"pl-4\">\n                                    <div>\n                                        {userProfile.user.followers.length} followers  \n                                    </div>\n                                    <div>\n                                        {userProfile.user.following.length} following\n                                    </div>\n                                </p>\n                                <div className=\"pl-4\">\n                                    {\n                                        showfollow\n                                        ?\n                                        <Button\n                                        variant=\"primary\"\n                                        onClick={()=>followUser()}\n                                        >\n                                            follow\n                                        </Button>\n                                        :\n                                        <Button\n                                        variant=\"primary\"\n                                        onClick={()=>unfollowUser()}\n                                        >\n                                            Unfollow\n                                        </Button>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </Row>\n                </Card>\n            </Container>\n            :\n            <h2>Loading .. </h2>\n        }\n        </>\n   )\n}\n\n\nexport default UserProfile;","import React,{useEffect, useState} from 'react'\nimport {Link,useHistory} from 'react-router-dom'\nimport { Card, Container, Row } from 'react-bootstrap'\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {FormControl, IconButton, Input, InputAdornment, InputLabel } from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport EmailIcon from '@material-ui/icons/Email';\nimport { SERVER_URL, basePath } from '../../config';\n\nconst SignUp  = ()=>{\n    const history = useHistory()\n    const [name,setName] = useState(\"\")\n    const [password,setPasword] = useState(\"\")\n    const [email,setEmail] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [imgurl,setImgUrl] = useState(undefined)\n    const [showPassword, togglePassword] = useState(false)\n\n    useEffect(() => {\n        if(imgurl) {\n            uploadFields()\n        }\n    }, [imgurl])\n\n    const uploadPic = () => {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"social-connect\")\n        data.append(\"cloud_name\", \"omanshu840\")\n        fetch(\"https://api.cloudinary.com/v1_1/omanshu840/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data.url)\n            setImgUrl(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    const uploadFields = () => {\n        fetch(SERVER_URL+\"/signup\",{\n            method:\"post\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                name,\n                password,\n                email,\n                pic: imgurl\n            })\n        }).then(res=>res.json())\n        .then(data=>{\n           if(data.error){\n              alert(data.error)\n           }\n           else{\n               alert(\"signed up successfully\")\n               history.push(basePath+'/signin')\n           }\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    const PostData = ()=>{\n\n        if(image) {\n            uploadPic()\n        }\n        else {\n            uploadFields()\n        }\n        \n        \n    }\n\n   return (\n    <Container>            \n        <Row className=\"justify-content-md-center\">\n            <div className=\"col-12 col-md-6 card-login\">\n                <Paper elevation={3} >\n                    <Card className=\"text-center\">\n                        <Card.Header><h2>Sign Up</h2></Card.Header>\n                        <Card.Body>\n\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"name-field\">Name*</InputLabel>\n                                <Input\n                                    id=\"name-field\"\n                                    type='text'\n                                    value={name}\n                                    onChange={(e)=>setName(e.target.value)}\n                                    endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton>\n                                            <AccountCircleIcon/>\n                                        </IconButton>\n                                    </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"email-field\">Email*</InputLabel>\n                                <Input\n                                    id=\"email-field\"\n                                    type='email'\n                                    value={email}\n                                    onChange={(e)=>setEmail(e.target.value)}\n                                    endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton>\n                                            <EmailIcon/>\n                                        </IconButton>\n                                    </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password*</InputLabel>\n                                <Input\n                                    required\n                                    id=\"standard-adornment-password\"\n                                    type={showPassword ? 'text' : 'password'}\n                                    value={password}\n                                    onChange={(e)=>setPasword(e.target.value)}\n                                    endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={ () => togglePassword(!showPassword)}\n                                        >\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n                            <Link to=\"/signin\">Already have an account? Sign In</Link>\n                        </Card.Body>\n                        <Card.Footer className=\"text-muted\">\n                            <Button \n                                size=\"large\"\n                                variant=\"contained\" \n                                color=\"primary\"\n                                onClick={()=>PostData()}\n                                endIcon={<InputIcon/>}\n                            >\n                                Sign Up\n                            </Button>\n                        </Card.Footer>\n                    </Card>\n                </Paper>\n            </div>\n        </Row>\n    </Container>\n      \n   )\n}\n\n\nexport default SignUp","import React, {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { Card, Container, Row } from 'react-bootstrap'\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {FormControl, Input, InputLabel } from '@material-ui/core';\nimport { SERVER_URL } from '../../config';\n\nconst CreatePost = () => {\n\n    const history = useHistory()\n\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [imgUrl, setImgUrl] = useState(\"\")\n\n    useEffect(() => {\n        if(imgUrl) {\n            fetch(SERVER_URL+\"/createpost\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \"+localStorage.getItem('jwt')\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    imgUrl,\n                })\n            }).then(res => res.json())\n            .then(data => {\n    \n                if(data.error) {\n                    alert(data.error)\n                }\n                else {\n                    alert(\"created post successfully\")\n                    history.push('/')\n                }\n            })\n        }\n    }, [imgUrl])\n\n    \n    const postDetails = () => {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"social-connect\")\n        data.append(\"cloud_name\", \"omanshu840\")\n        fetch(\"https://api.cloudinary.com/v1_1/omanshu840/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data.url)\n            setImgUrl(data.url)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    return (\n        <>\n        <Container>            \n            <Row className=\"justify-content-md-center\">\n                <div className=\"col-12 col-md-6 card-login\">\n                    <Paper elevation={3} >\n                        <Card className=\"text-center\">\n                            <Card.Header><h2>Create New Post</h2></Card.Header>\n                            <Card.Body>\n\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"name-field\">Title*</InputLabel>\n                                    <Input\n                                        id=\"name-field\"\n                                        type='text'\n                                        value={title}\n                                        onChange={(e)=>setTitle(e.target.value)}\n                                    />\n                                </FormControl>\n\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"email-field\">Content*</InputLabel>\n                                    <Input\n                                        id=\"email-field\"\n                                        type='text'\n                                        value={body}\n                                        onChange={(e)=>setBody(e.target.value)}\n                                    />\n                                </FormControl>\n\n                                <input\n                                    type=\"file\"\n                                    placeholder=\"upload image\"\n                                    onChange={(e) => setImage(e.target.files[0])}\n                                />\n\n                            </Card.Body>\n                            <Card.Footer className=\"text-muted\">\n                                <Button \n                                    size=\"large\"\n                                    variant=\"contained\" \n                                    color=\"primary\"\n                                    onClick={()=>postDetails()}\n                                >\n                                    Post\n                                </Button>\n                            </Card.Footer>\n                        </Card>\n                    </Paper>\n                </div>\n            </Row>\n        </Container>\n        \n        {/* <div>\n          <div className=\"card auth-card input-field\">\n            <h2>Create Post</h2>\n            \n            <input\n                type=\"text\"\n                placeholder=\"title\"\n                value={title}\n                onChange={(e)=>setTitle(e.target.value)}\n            />\n\n            <input\n                type=\"text\"\n                placeholder=\"body\"\n                value={body}\n                onChange={(e)=>setBody(e.target.value)}\n            />\n\n            <input\n                type=\"file\"\n                placeholder=\"upload image\"\n                onChange={(e) => setImage(e.target.files[0])}\n            />\n\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n            onClick={()=>postDetails()}\n            >\n                SignIn\n            </button>\n            <h5>\n                <Link to=\"/signup\">Don't have an account ?</Link>\n            </h5>\n    \n        </div>\n      </div> */}\n      </>\n    )\n}\n\nexport default CreatePost;","export const initialState = null\n\nexport const reducer = (state, action) => {\n    if(action.type === \"USER\") {\n        return action.payload\n    }\n    if(action.type === \"CLEAR\") {\n        return null\n    }\n    if(action.type === \"UPDATE\") {\n        return {\n            ...state,\n            followers: action.payload.followers,\n            following: action.payload.following\n        }\n    }\n    if(action.type === \"UPDATEPIC\") {\n        return {\n            ...state,\n            pic: action.payload\n        }\n    }\n\n    return state\n}","import { Accordion, AccordionDetails, AccordionSummary, Avatar, CardHeader, Divider, IconButton, List, ListItem, ListItemText, Paper, TextField } from '@material-ui/core'\nimport React, {useState, useEffect, useContext} from 'react'\nimport { Card, Container, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {UserContext} from '../../App'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { SERVER_URL } from '../../config'\n\nconst SubUserPosts  = ()=>{\n\n   const [data, setData] = useState([])\n   const {state, dispatch} = useContext(UserContext)\n   \n   useEffect(() => {\n      fetch(SERVER_URL+'/getsubpost', {\n         headers: {\n            \"Authorization\" : \"Bearer \" + localStorage.getItem(\"jwt\")\n         }\n      }).then(res => res.json())\n      .then((result) => {\n         setData(result.posts)\n      })\n   }, [])\n\n   const likePost = (id) => {\n      fetch(SERVER_URL+'/like', {\n         method: \"put\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n         },\n         body: JSON.stringify({\n            postId: id\n         })\n      }).then(res => res.json())\n      .then(result => {\n         const newData = data.map(item => {\n            if(item._id === result._id) {\n               return result\n            }\n            else {\n               return item\n            }\n         })\n\n         setData(newData)\n      })\n   }\n\n   const unlikePost = (id) => {\n      fetch(SERVER_URL+'/unlike', {\n         method: \"put\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n         },\n         body: JSON.stringify({\n            postId: id\n         })\n      }).then(res => res.json())\n      .then(result => {\n         const newData = data.map(item => {\n            if(item._id === result._id) {\n               return result\n            }\n            else {\n               return item\n            }\n         })\n\n         setData(newData)\n      })\n   }\n\n   const makeComment = (text,postId)=>{\n      fetch(SERVER_URL+'/comment',{\n          method:\"put\",\n          headers:{\n              \"Content-Type\":\"application/json\",\n              \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              postId,\n              text\n          })\n      }).then(res=>res.json())\n      .then(result=>{\n          const newData = data.map(item=>{\n            if(item._id===result._id){\n                return result\n            }else{\n                return item\n            }\n         })\n        setData(newData)\n      }).catch(err=>{\n          console.log(err)\n      })\n   }\n\n   const deletePost = (postid)=>{\n      fetch(SERVER_URL+`/deletepost/${postid}`,{\n          method:\"delete\",\n          headers:{\n              Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\n          }\n      }).then(res=>res.json())\n      .then(result=>{\n          console.log(result)\n          const newData = data.filter(item=>{\n              return item._id !== result._id\n          })\n          setData(newData)\n      })\n   }\n\n   return(\n        <Container>\n           {data.map((item, index) => {\n              return (\n               <Row className=\"justify-content-md-center\" key={index}>\n                  <div className=\"col-12 col-md-8 card-post\">\n                     <Paper elevation={3} >\n                        <Card>\n                           <CardHeader\n                              avatar={\n                                 <Avatar>\n                                    <img src=\"https://res.cloudinary.com/omanshu840/image/upload/v1608609510/sample.jpg\" alt=\"...\" />\n                                 </Avatar>\n                              }\n                              action={\n                                 item.postedBy._id === state._id \n                                 &&\n                                 <IconButton \n                                    variant=\"primary\"\n                                    onClick={() => {deletePost(item._id)}}\n                                 >\n                                    <DeleteIcon/>\n                                 </IconButton>\n                              }\n                              title={\n                                 <Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>\n                                    {item.postedBy.name}\n                                 </Link>\n                              }\n                              subheader={item.postedBy.email}\n                           />\n                           <Card.Body>\n                              <img src={item.photo} alt=\"...\" />\n                           </Card.Body>\n                           <Card.Footer className=\"text-muted\">\n                              <div>\n                                 {\n                                    item.likes.includes(state._id)\n                                    ? \n                                    <IconButton onClick={() => {unlikePost(item._id)}}>\n                                       <FavoriteIcon/>\n                                    </IconButton>\n                                    :\n                                    <IconButton onClick={() => {likePost(item._id)}}>\n                                       <FavoriteBorderIcon/>\n                                    </IconButton>\n                                 }\n                              </div>\n                              <div>\n                                 {item.likes.length} Likes\n                              </div>\n                              <div className=\"mt-3\">\n                                 <h4>{item.title}</h4>\n                              </div>\n                              <div>\n                                 <p>{item.body}</p>\n                              </div>\n                              <Accordion>\n                                 <AccordionSummary\n                                    expandIcon={<ExpandMoreIcon />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                 >\n                                    Comments\n                                 </AccordionSummary>\n                                 <AccordionDetails>\n                                       <List>\n                                          {\n                                             item.comments.map(record => {\n                                                return (\n                                                   <>\n                                                      <Divider variant=\"inset\" component=\"li\" />\n                                                      <ListItem>\n                                                         <ListItemText \n                                                            primary={record.postedBy.name}\n                                                            secondary={record.text}\n                                                         />\n                                                      </ListItem>\n                                                   </>\n                                                )\n                                             })\n                                          }\n                                          <ListItem>\n                                             <form onSubmit={(e) => {\n                                                e.preventDefault()\n                                                makeComment(e.target[0].value, item._id)\n                                             }}>\n                                                <TextField\n                                                   id=\"input-with-icon-textfield\"\n                                                   label=\"Add a comment\"\n                                                />\n                                             </form>\n                                          </ListItem>\n                                       </List>\n                                 </AccordionDetails>\n                              </Accordion>\n                           </Card.Footer>\n                        </Card>\n                     </Paper>\n                  </div>\n               </Row>\n              )\n           })}\n        </Container>\n   )\n}\n\n\nexport default SubUserPosts;","import React, { useEffect, useState } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Card, Divider, InputAdornment, List, ListItem, ListItemText, TextField } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { SERVER_URL, basePath } from '../../config';\n\nconst Search = ()=>{\n\n    const [data, setData] = useState([])\n    const [search, setSearch] = useState(\"\")\n    const [searchResult, setSearchResult] = useState([])\n\n    useEffect(() => {\n        fetch(SERVER_URL+'/allusers', {\n            headers: {\n                \"Authorization\" : \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n        .then((result) => {\n            setData(result.users)\n            console.log(result.users)\n        })\n    }, [])\n\n    const fetchUsers = (query) => {\n        setSearch(query)\n        if(query!==\"\") {\n            const result = []\n            data.map((item) => {\n                if((item.email).includes(query) || (item.name).includes(query)) {\n                    result.push(item)\n                }\n            })\n            setSearchResult(result)\n        }\n        else {\n            setSearchResult([])\n        }\n    }\n\n    return (\n        <Container>\n            <Row className=\"justify-content-center mb-3\">\n                <div className=\"col-12 col-md-6\">\n                    <Card className=\"p-4\">\n                        <TextField\n                            id=\"input-with-icon-textfield\"\n                            label=\"Search Users\"\n                            value={search}\n                            onChange={(e)=>fetchUsers(e.target.value)}\n                            fullWidth\n                            InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                            }}\n                        />\n                    </Card>\n                </div>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <div className=\"col-12 col-md-6\">\n                    <Card>\n                        <List>\n                            {searchResult.map((item, index) => {\n                                const link = basePath+\"/profile/\"+item._id\n                                return (\n                                    <div id=\"index\">\n                                        <Divider/>\n                                        <Link to={link}>\n                                            <ListItem>\n                                                <ListItemText primary={item.name}/>\n                                            </ListItem>\n                                        </Link>\n                                    </div>\n                                )\n                            })}\n                        </List>\n                    </Card>\n                </div>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Search;","import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport {BrowserRouter,Route,Switch, useHistory} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/SignIn'\nimport Profile from './components/screens/Profile'\nimport UserProfile from './components/screens/UserProfile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost';\nimport {initialState, reducer} from './Reducers/userReducer'\nimport SubUserPosts from './components/screens/SubUserPosts';\nimport Search from './components/screens/Search';\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state, dispatch} = useContext(UserContext)\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    if(user) {\n      dispatch({type: \"USER\", payload: user})\n    }\n    else {\n      history.push(basePath+\"/signin\")\n    }\n\n  }, [])\n\n  const basePath = \"/Socio-Engage\"\n\n  return (\n      <Switch>\n        <Route exact path={basePath+\"/\"}>\n          <Home />\n        </Route>\n        <Route path={basePath+\"/signin\"}>\n          <Signin />\n        </Route>\n        <Route path={basePath+\"/signup\"}>\n          <Signup />\n        </Route>\n        <Route exact path={basePath+\"/profile\"}>\n          <Profile />\n        </Route>\n        <Route path={basePath+\"/createpost\"}>\n          <CreatePost/>\n        </Route>\n        <Route path={basePath+\"/profile/:userid\"}>\n          <UserProfile/>\n        </Route>\n        <Route path={basePath+\"/followingpost\"}>\n          <SubUserPosts/>\n        </Route>\n        <Route path={basePath+\"/search\"}>\n          <Search/>\n        </Route>\n      </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/main.css'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Raleway',\n      'sans-serif'\n    ].join(','),\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}